upstream django_qzw {
    #server unix:///sock/django.sock; # for a file socket
    server 127.0.0.1:8000; # for a web port socket
}

server {

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    server_name qzandronum.com;

    ssl_certificate /etc/letsencrypt/live/qzandronum.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/qzandronum.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    include /etc/nginx/conf.d/qzw-common;

    # your Django project's static files
    location /static/ {
        if ($http_origin ~* "^https://qcde.net$") {
           add_header Access-Control-Allow-Origin "$http_origin";
        }
        # add_header Access-Control-Allow-Origin "*";
        alias $WEB_ROOT/static/;
        access_log off;
        expires 48d;
    }

    # restricted-access media. Works with django-sendfile, request goes through a view first.
    location /restricted/ {
        internal;
        alias $WEB_ROOT/media/restricted/;

        add_header Vary Accept-Encoding;
        access_log /var/log/nginx/restricted.log;
    }
}


server {
    if ($host = qzandronum.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen      80;
    listen      [::]:80;
    server_name qzandronum.com;
    return 404; # managed by Certbot
}

server {

    listen 443 ssl;
    server_name qcde.net;

    include /etc/nginx/conf.d/qzw-common;

    ssl_certificate /etc/letsencrypt/live/qcde.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/qcde.net/privkey.pem; # managed by Certbot
}


server {
    if ($host = qcde.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen      80;
    listen      [::]:80;
    server_name qcde.net;


}
